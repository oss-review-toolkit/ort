{
    "schema_version": "1.2.0",
    "id": "RUSTSEC-2019-0033",
    "published": "2019-11-16T00:00:00Z",
    "modified": "2021-01-04T19:02:00Z",
    "aliases": [
        "CVE-2020-25574",
        "CVE-2019-25008"
    ],
    "summary": "Integer Overflow in HeaderMap::reserve() can cause Denial of Service",
    "details": "HeaderMap::reserve() used usize::next_power_of_two() to calculate\nthe increased capacity. However, next_power_of_two() silently overflows\nto 0 if given a sufficently large number in release mode.\n\nIf the map was not empty when the overflow happens, the library will invoke self.grow(0)\nand start infinite probing. This allows an attacker who controls\nthe argument to reserve() to cause a potential denial of service (DoS).\n\nThe flaw was corrected in 0.1.20 release of http crate.\n",
    "references": [
        {
            "type": "REPORT",
            "url": "https://github.com/hyperium/http/issues/352"
        },
        {
            "type": "ADVISORY",
            "url": "https://rustsec.org/advisories/RUSTSEC-2019-0033.html"
        }
    ],
    "affected": [
        {
            "package": {
                "ecosystem": "crates.io",
                "name": "http"
            },
            "ranges": [
                {
                    "type": "SEMVER",
                    "events": [
                        {
                            "introduced": "0"
                        },
                        {
                            "fixed": "0.1.20"
                        }
                    ]
                }
            ],
            "ecosystem_specific": {
                "functions": [
                    "http::header::HeaderMap::reserve"
                ],
                "keywords": [
                    "http",
                    "integer-overflow",
                    "DoS"
                ],
                "categories": [
                    "denial-of-service"
                ],
                "severity": "HIGH"
            }
        }
    ]
}
