[versions]
dependencyAnalysisPlugin = "2.0.2"
detektPlugin = "1.23.7"
dokkatooPlugin = "2.4.0"
downloadPlugin = "5.6.0"
gitSemverPlugin = "0.12.10"
graalVmNativeImagePlugin = "0.10.3"
ideaExtPlugin = "1.1.8"
kotlinPlugin = "2.0.20"
ksp = "2.0.20-1.0.25"
mavenPublishPlugin = "0.29.0"
reproducibleBuildsPlugin = "1.0"
versionsPlugin = "0.51.0"

asciidoctorj = "3.0.0"
asciidoctorjPdf = "2.3.18"
clikt = "5.0.0"
commonsCompress = "1.27.1"
cvssCalculator = "1.4.3"
cyclonedx = "9.0.5"
diffUtils = "4.12"
discoClient = "2.0.39"
diskLruCache = "2.0.2"
exposed = "0.54.0"
flexmark = "0.64.8"
freemarker = "2.3.33"
greenmail = "2.0.1"
hikari = "5.1.0"
hoplite = "2.7.5"
jackson = "2.17.2"
jakartaMail = "2.0.1"
jgit = "6.10.0.202406032230-r"
jiraRestClient = "5.2.7"
jruby = "9.4.8.0"
jslt = "0.1.14"
jsonSchemaValidator = "1.5.2"
kaml = "0.61.0"
kotest = "5.9.1"
kotlinPoet = "1.18.1"
kotlinxCoroutines = "1.9.0"
kotlinxHtml = "0.11.0"
kotlinxSerialization = "1.7.3"
ks3 = "0.6.0"
tomlkt = "0.4.0"
ktor = "2.3.12"
log4jApi = "2.24.0"
log4jApiKotlin = "1.5.0"
logback = "1.5.8"
maven = "3.9.9"
mavenResolver = "1.9.22"
mockk = "1.13.12"
mordant = "3.0.0"
okhttp = "4.12.0"
postgres = "42.7.4"
postgresEmbedded = "1.1.0"
reflections = "0.10.2"
retrofit = "2.11.0"
s3 = "2.28.0"
saxonHe = "12.5"
scanoss = "0.7.1"
semver4j = "5.4.0"
slf4j = "2.0.16"
springCore = "5.3.39"
svnkit = "1.10.11"
sw360Client = "17.0.1-m2"
wiremock = "3.9.1"
xmlutil = "0.90.1"
xz = "1.10"

[plugins]
download = { id = "de.undercouch.download", version.ref = "downloadPlugin" }
gitSemver = { id = "com.github.jmongard.git-semver-plugin", version.ref = "gitSemverPlugin" }
ideaExt = { id = "org.jetbrains.gradle.plugin.idea-ext", version.ref = "ideaExtPlugin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinPlugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
# These are Maven coordinates for Gradle plugins, which are required for use in precompiled plugin scripts.
plugin-dependencyAnalysis = { module = "com.autonomousapps:dependency-analysis-gradle-plugin", version.ref = "dependencyAnalysisPlugin" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektPlugin" }
plugin-detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detektPlugin" }
plugin-dokkatoo = { module = "dev.adamko.dokkatoo:dokkatoo-plugin", version.ref = "dokkatooPlugin" }
plugin-graalVmNativeImage = { module = "org.graalvm.buildtools:native-gradle-plugin", version.ref = "graalVmNativeImagePlugin" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinPlugin" }
plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
plugin-mavenPublish = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "mavenPublishPlugin" }
plugin-reproducibleBuilds = { module = "org.gradlex:reproducible-builds", version.ref = "reproducibleBuildsPlugin" }

asciidoctorj = { module = "org.asciidoctor:asciidoctorj", version.ref = "asciidoctorj" }
asciidoctorj-pdf = { module = "org.asciidoctor:asciidoctorj-pdf", version.ref = "asciidoctorjPdf" }
awsS3 = { module = "software.amazon.awssdk:s3", version.ref = "s3" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
commonsCompress = { module = "org.apache.commons:commons-compress", version.ref = "commonsCompress" }
cvssCalculator = { module = "us.springett:cvss-calculator", version.ref = "cvssCalculator" }
cyclonedx = { module = "org.cyclonedx:cyclonedx-core-java", version.ref = "cyclonedx" }
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detektPlugin" }
detekt-test = { module = "io.gitlab.arturbosch.detekt:detekt-test", version.ref = "detektPlugin" }
diffUtils = { module = "io.github.java-diff-utils:java-diff-utils", version.ref = "diffUtils" }
discoClient = { module = "io.foojay.api:discoclient", version.ref = "discoClient" }
diskLruCache = { module = "com.jakewharton:disklrucache", version.ref = "diskLruCache" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-javaTime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
flexmark = { module = "com.vladsch.flexmark:flexmark", version.ref = "flexmark" }
freemarker = { module = "org.freemarker:freemarker", version.ref = "freemarker" }
greenmail = { module = "com.icegreen:greenmail", version.ref = "greenmail" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jakartaMail = { module = "com.sun.mail:jakarta.mail", version.ref = "jakartaMail" }
jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "jgit" }
jgit-ssh-apache = { module = "org.eclipse.jgit:org.eclipse.jgit.ssh.apache", version.ref = "jgit" }
jgit-ssh-apache-agent = { module = "org.eclipse.jgit:org.eclipse.jgit.ssh.apache.agent", version.ref = "jgit" }
jiraRestClient-api = { module = "com.atlassian.jira:jira-rest-java-client-api", version.ref = "jiraRestClient" }
jiraRestClient-app = { module = "com.atlassian.jira:jira-rest-java-client-app", version.ref = "jiraRestClient" }
jruby = { module = "org.jruby:jruby", version.ref = "jruby" }
jslt = { module = "com.schibsted.spt.data:jslt", version.ref = "jslt" }
jsonSchemaValidator = { module = "com.networknt:json-schema-validator", version.ref = "jsonSchemaValidator" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-json = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
kotest-extensions-junitXml = { module = "io.kotest:kotest-extensions-junitxml", version.ref = "kotest" }
kotest-framework-api = { module = "io.kotest:kotest-framework-api", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet"}
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinPoet"}
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinxHtml" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinx-serialization-toml = { module = "net.peanuuutz.tomlkt:tomlkt", version.ref = "tomlkt" }
kotlinx-serialization-xml = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlutil" }
kotlinx-serialization-yaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
ks3-jdk = { module = "io.ks3:ks3-jdk", version.ref = "ks3" }
ks3-standard = { module = "io.ks3:ks3-standard", version.ref = "ks3" }
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp"}
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4jApi" }
log4j-api-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "log4jApiKotlin" }
log4j-api-slf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4jApi" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
maven-compat = { module = "org.apache.maven:maven-compat", version.ref = "maven" }
maven-core = { module = "org.apache.maven:maven-core", version.ref = "maven" }
maven-model = { module = "org.apache.maven:maven-model", version.ref = "maven" }
maven-model-builder = { module = "org.apache.maven:maven-model-builder", version.ref = "maven" }
maven-resolver-api = { module = "org.apache.maven.resolver:maven-resolver-api", version.ref = "mavenResolver" }
maven-resolver-connector-basic = { module = "org.apache.maven.resolver:maven-resolver-connector-basic", version.ref = "mavenResolver" }
maven-resolver-transport-file = { module = "org.apache.maven.resolver:maven-resolver-transport-file", version.ref = "mavenResolver" }
maven-resolver-transport-http = { module = "org.apache.maven.resolver:maven-resolver-transport-http", version.ref = "mavenResolver" }
maven-resolver-transport-wagon = { module = "org.apache.maven.resolver:maven-resolver-transport-wagon", version.ref = "mavenResolver" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mordant = { module = "com.github.ajalt.mordant:mordant", version.ref = "mordant" }
mordantCoroutines = { module = "com.github.ajalt.mordant:mordant-coroutines", version.ref = "mordant" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
postgresEmbedded = { module = "com.opentable.components:otj-pg-embedded", version.ref = "postgresEmbedded" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }
retrofit-converter-kotlinxSerialization = { module = "com.squareup.retrofit2:converter-kotlinx-serialization", version.ref = "retrofit" }
retrofit-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
saxonHe = { module = "net.sf.saxon:Saxon-HE", version.ref = "saxonHe" }
scanoss = { module = "com.scanoss:scanoss", version.ref = "scanoss" }
semver4j = { module = "org.semver4j:semver4j", version.ref = "semver4j" }
slf4j = { module = "org.slf4j:slf4j-api ", version.ref = "slf4j" }
springCore = { module = "org.springframework:spring-core", version.ref = "springCore" }
svnkit = { module = "org.tmatesoft.svnkit:svnkit", version.ref = "svnkit" }
sw360Client = { module = "org.eclipse.sw360:client", version.ref = "sw360Client" }
wiremock = { module = "org.wiremock:wiremock", version.ref = "wiremock" }
xz = { module = "org.tukaani:xz", version.ref = "xz" }

[bundles]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-javaTime", "exposed-json"]
hoplite = ["hoplite-core", "hoplite-yaml"]
ks3 = ["ks3-jdk", "ks3-standard"]
mavenResolver = ["maven-resolver-connector-basic", "maven-resolver-transport-file", "maven-resolver-transport-http", "maven-resolver-transport-wagon"]
