# This module provides a repo for each requires-dependency in your conanfile.
# It's generated by the BazelDeps, and should be used in your Module.bazel file.
load(":conan_deps_repo_rules.bzl", "conan_dependency_repo")

def _load_dependenies_impl(mctx):
    conan_dependency_repo(
        name = "fmt",
        package_path = "~/.conan2/p/fmt1eb60e0d8556e/p",
        build_file_path = "conan/fmt/BUILD.bazel",
    )
    conan_dependency_repo(
        name = "libcurl",
        package_path = "~/.conan2/p/b/libcu1431bc73699fd/p",
        build_file_path = "conan/libcurl/BUILD.bazel",
    )
    conan_dependency_repo(
        name = "openssl",
        package_path = "~/.conan2/p/opens0aa3b75222f02/p",
        build_file_path = "conan/openssl/BUILD.bazel",
    )
    conan_dependency_repo(
        name = "zlib",
        package_path = "~/.conan2/p/zlib9780dc2008618/p",
        build_file_path = "conan/zlib/BUILD.bazel",
    )
    conan_dependency_repo(
        name = "gtest",
        package_path = "~/.conan2/p/b/gtestdb898f69ecf80/p",
        build_file_path = "conan/gtest/BUILD.bazel",
    )

    return mctx.extension_metadata(
        # It will only warn you if any direct
        # dependency is not imported by the 'use_repo' or even it is imported
        # but not created. Notice that root_module_direct_dev_deps can not be None as we
        # are giving 'all' value to root_module_direct_deps.
        # Fix the 'use_repo' calls by running 'bazel mod tidy'
        root_module_direct_deps = 'all',
        root_module_direct_dev_deps = [],

        # Prevent writing function content to lockfiles:
        # - https://bazel.build/rules/lib/builtins/module_ctx#extension_metadata
        # Important for remote build. Actually it's not reproducible, as local paths will
        # be different on different machines. But we assume that conan works correctly here.
        # IMPORTANT: Not compatible with bazel < 7.1
        reproducible = True,
    )

conan_extension = module_extension(
    implementation = _load_dependenies_impl,
    os_dependent = True,
    arch_dependent = True,
)
