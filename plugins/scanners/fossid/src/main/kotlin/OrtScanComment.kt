/*
 * Copyright (C) 2025 The ORT Project Authors (see <https://github.com/oss-review-toolkit/ort/blob/main/NOTICE>)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

package org.ossreviewtoolkit.plugins.scanners.fossid

import org.ossreviewtoolkit.model.jsonMapper

/**
 * A class representing a comment generated by ORT and attached to the "comment" property of a scan in FossID.
 * This comment contains the VCS information of the scanned source code.
 */
data class OrtScanComment(val ort: OrtScanCommentPayload) {
    fun asJsonString(): String = jsonMapper.writeValueAsString(this)
}

/**
 * The payload of an [OrtComment].
 */
data class OrtScanCommentPayload(
    /**
     * The URL of the repository where the source code is hosted.
     */
    val repositoryURL: String,
    /**
     * The VCS revision of the source code, resolved by ORT e.g. a git hash.
     */
    val revision: String,
    /**
     * The VCC revision which is a rolling branch name e.g. "release".
     */
    val projectRevision: String
)

internal fun createOrtScanComment(url: String, revision: String, projectRevision: String): OrtScanComment =
    OrtScanComment(OrtScanCommentPayload(url, revision, projectRevision))
